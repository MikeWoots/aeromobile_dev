{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/maps/maps.ts","../../src/pages/tabs/tabs.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/home/home.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 136;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 136\n// module chunks = 1","var map = {\n\t\"../pages/tabs/tabs.module\": [\n\t\t418,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 178;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 178\n// module chunks = 1","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { Storage } from '@ionic/storage';\nimport { File } from '@ionic-native/file';\n\n\n\nimport {\n  GoogleMap,\n  GoogleMaps,\n  Polygon,\n  GoogleMapsEvent,\n} from '@ionic-native/google-maps';\nimport { FileTransferObject, FileTransfer } from '@ionic-native/file-transfer';\n\n@Component({\n  selector: 'maps',\n  templateUrl: 'maps.html',\n  providers: []\n})\nexport class Maps {\n  gMap: GoogleMap;\n  // Dummy boundary data as stored on the database\n  boundaries = [\n    {polygon: \"30.976826548576355,-25.41587794893193 30.978114008903503,-25.4150106495908 30.978779196739197,-25.414385608767674 30.979363918304443,-25.4143952993478 30.97965359687805,-25.414569729656847 30.979771614074707,-25.414681171111077 30.979787707328796,-25.414797457736125 30.979744791984558,-25.414884672631334 30.97970724105835,-25.41504456644201 30.979637503623962,-25.41518023375148 30.979261994361877,-25.417263676832203 30.979385375976562,-25.417651290177638 30.979535579681396,-25.417917773629767 30.979589223861694,-25.418038902276937 30.979632139205933,-25.418189101630425 30.979599952697754,-25.41833445566531 30.979551672935486,-25.41846042902048 30.97942292690277,-25.41860578272825 30.979315638542175,-25.41868330463408 30.9789776802063,-25.418775361832505 30.977749228477478,-25.41878505205983 30.97744345664978,-25.41760283857761 30.977298617362976,-25.417249141307497 30.977132320404053,-25.41688575262064 30.976831912994385,-25.41613474586388 30.976783633232117,-25.4160087700788 30.976826548576355,-25.41587794893193\", id: 1, tileBounds: \"38407-38407-27980-27981,76814-76815-55961-55963,153628-153630-111923-111927,307257-307261-223847-223854,614514-614523-447694-447709,1229028-1229046-895389-895418\", minZoom: 16, maxZoom: 19},\n    {polygon: \"30.979637503623962,-25.41716192812254 30.979546308517456,-25.417350889943577 30.979551672935486,-25.41743810299185 30.979583859443665,-25.41760283857761 30.979760885238647,-25.417922618777993 30.979857444763184,-25.4179565348101 30.9799861907959,-25.417971070249525 30.98015785217285,-25.417786954554135 30.980329513549805,-25.417728812697188 30.980511903762817,-25.417714277228562 30.98067283630371,-25.417738503008625 30.980753302574158,-25.417738503008625 30.980887413024902,-25.417670670812193 30.981080532073975,-25.417593148255268 30.981300473213196,-25.417564077283554 30.981547236442566,-25.41748655465808 30.98167061805725,-25.417496244989 30.981788635253906,-25.41744779332666 30.98197638988495,-25.417433257824158 30.982067584991455,-25.417418722319916 30.98217487335205,-25.417413877151432 30.982298254966736,-25.417481709492336 30.98243772983551,-25.417481709492336 30.982566475868225,-25.4174768643264 30.982823967933655,-25.417501090154158 30.98215878009796,-25.416284947589446 30.981997847557068,-25.416255876302316 30.981761813163757,-25.416309173656693 30.981606245040894,-25.41633339971906 30.98146677017212,-25.416406077876985 30.981268286705017,-25.416406077876985 30.98096787929535,-25.416221959791816 30.980603098869324,-25.416585350479256 30.980318784713745,-25.416551434061425 30.98021149635315,-25.416595040882587 30.979637503623962,-25.41716192812254\", id: 2, tileBounds: \"38407-38408-27981-27981,76815-76816-55962-55962,153630-153633-111924-111925,307261-307266-223848-223851,614522-614532-447697-447703,1229044-1229064-895394-895407\", minZoom: 16, maxZoom: 19}\n  ];\n  // The selected current boundary\n  currentBoundary = null;\n  // Keep track of the google maps tile overlay object\n  currentTileOverlayObject = null;\n  // Keep track of the google maps polygon object\n  currentPolygonObject = null;\n  offlineTiles = {};\n\n  baseUrl = 'https://s3.amazonaws.com/aero-test-data/';\n\n  // The max zoom level for a user is zoom level 20\n  maxZoomLevel = 19;\n  private fileTransfer: FileTransferObject;\n\n  constructor(public platform: Platform, private googleMaps: GoogleMaps, splashScreen: SplashScreen,\n              private storage: Storage, private transfer: FileTransfer, private file: File) {\n    // Load the map when the platform is ready\n    platform.ready().then(() => {\n      splashScreen.hide();\n      setTimeout(this.loadMap.bind(this), 1000);\n    });\n  }\n\n  loadMap(){\n    // Create the google map element\n    let element: HTMLElement = document.getElementById('map');\n    this.gMap = GoogleMaps.create(element, {\n      controls: {\n        compass: false,\n        myLocationButton: true,\n        myLocation : true,\n        indoorPicker: true,\n        mapToolbar: true   // currently Android only\n      }},);\n\n    // Choose a random map center to start with\n    let mapCenter = {lat: -25.417067447, lng: 30.98001837};\n    let zoomLevel = 16;\n\n    this.gMap.one(GoogleMapsEvent.MAP_READY).then(\n      () => {\n        console.log(\"Map ready: \", zoomLevel, mapCenter);\n        this.gMap.setOptions({\n          'mapType': 'MAP_TYPE_SATELLITE',\n          'controls': {\n            'compass': false,\n            'myLocationButton': true,\n            'indoorPicker': true,\n            'mapToolbar': true   // currently Android only\n          },\n          'gestures': {\n            'scroll': true,\n            'tilt': false,\n            'rotate': false,\n            'zoom': true\n          },\n          'camera': {\n            'target': mapCenter,\n            'tilt': 0,\n            'zoom': zoomLevel,\n            'bearing': 0\n          },\n          'preferences': {\n            'zoom': {\n              'minZoom': 0,\n              'maxZoom': 19\n            },\n            'padding': {\n              'left': 30,\n              'top': 50,\n              'bottom': 20,\n              'right': 10\n            }\n          }\n        });\n\n        // Add the polygons\n        this.addPolygons();\n      }\n    );\n  }\n\n  // Function to add all the polygons which are linked to the client's account\n  addPolygons(){\n    // If there is client data present\n    for (let i=0; i<this.boundaries.length; i++) {\n      let boundary = this.boundaries[i];\n      // Add the polygon to google maps\n      this.gMap.addPolygon({\n        points: this.convertPolygonStringToLatLngs(boundary.polygon),\n        geodesic: true,\n        fillColor: \"rgba(255,255,255,0.6)\",\n        strokeColor: \"#FFFFFF\",\n        strokeWidth: 2,\n      }).then((polygon: Polygon) => {\n        // Add the polygon click event\n        this.addPolygonClickEvent(polygon, boundary.id);\n      });\n    }\n  }\n\n  addPolygonClickEvent(polygon: Polygon, databaseId){\n    // Append the polygon to the all polygon objs list\n    this.currentPolygonObject = polygon;\n    // Make the polygon clickable\n    polygon.setClickable(true);\n    // Set the polygon with the database id\n    polygon.set('databaseId', databaseId);\n    // Add the click event for the polygon\n    polygon.on(GoogleMapsEvent.POLYGON_CLICK).subscribe(\n      () => {\n        // Reset the previous polygon to white\n        this.currentPolygonObject.setFillColor('rgba(255,255,255,0.6)');\n        this.currentPolygonObject.setStrokeColor('#FFFFFF');\n        // Make the polygon green\n        polygon.setFillColor('rgba(93, 211, 158, 0.1)');\n        polygon.setStrokeColor('rgb(93, 211, 158)');\n        // Update the current polygon\n        this.currentPolygonObject = polygon;\n        this.overlayPolygonData(polygon.get('databaseId'));\n      }\n    )\n  }\n\n  overlayPolygonData(polygonId){\n    // Update the boundary variable to have all the boundary information associated with the id\n    this.currentBoundary = this.boundaries.filter((item) => {\n      return item.id===polygonId;\n    })[0];\n    // Remove any previous tile overlay object which may exist\n    this.removeTiles();\n    // Make sure there are surveys available for this boundary\n    this.overlayTiles();\n  }\n\n  removeTiles(){\n    // If there already exists a tile overlay then remove it\n    if (this.currentTileOverlayObject !== null && typeof this.currentTileOverlayObject !== 'undefined'){\n      console.log(\"REMOVE TILE OVERLAY\");\n      this.currentTileOverlayObject.remove();\n    }\n  }\n\n  overlayTiles(){\n    // Store a temporary object of the constructor\n    let tempObj = this;\n    this.gMap.addTileOverlay({\n      debug: true,\n      // Load image files from the local file path\n      getTile: function(x, y, zoom) {\n        // scale coords\n        console.log(x,y,zoom);\n        let ymax = 1 << zoom;\n        let yNew = ymax - y - 1;\n        // Get the boundary id required\n        let boundaryId = tempObj.currentBoundary.id;\n        const offlineKey = boundaryId + '/visible/' + zoom + \"/\" + x + \"/\" + yNew + \".png\";\n        console.log(tempObj.offlineTiles[boundaryId]);\n        if (typeof tempObj.offlineTiles[boundaryId] !== 'undefined') {\n          // Check first if the boundary key exists\n          if (offlineKey in tempObj.offlineTiles[boundaryId]) {\n            console.log('Tile path', tempObj.file.dataDirectory + (boundaryId + '/visible/' + zoom + \"/\" + x + \"/\" + yNew + \".png\"));\n            // return the path to the require tile\n            return(tempObj.file.dataDirectory + (boundaryId + '/visible/' + zoom + \"/\" + x + \"/\" + yNew + \".png\"));\n          }\n        }\n        return null;\n      }\n    }).then(tileOverlay => {\n        this.currentTileOverlayObject = tileOverlay;\n      }\n    )\n  }\n\n  // Function to convert polygon string returned from database to a google maps polygon array\n  convertPolygonStringToLatLngs(polygonString){\n    let coordinates = polygonString.split(\" \");\n    let polygonArray = [];\n    for (let i in coordinates){\n      let latLngs = coordinates[i].split(\",\");\n      if (latLngs.length > 1){\n        polygonArray.push({lat: latLngs[1], lng: latLngs[0]})\n      }\n    }\n    return polygonArray;\n  }\n\n  getOrDownloadTiles() {\n    // Initialise the file transfer object to download files\n    this.storage.set('offline_tiles', null);\n    this.storage.get('offline_tiles').then((offlineTiles) => {\n      // If the offline tiles are not null then update the offline tiles variable\n      if (offlineTiles !== null) {\n        this.offlineTiles = offlineTiles;\n      } else {\n        this.downloadOfflineTiles();\n      }\n    })\n  }\n\n  downloadOfflineTiles() {\n    for(let i = 0; i < 2 ; i++) {\n      const boundary = this.boundaries[i];\n      const tileBounds = boundary.tileBounds;\n      const tileSplits = tileBounds.split(',');\n      const minZoom = boundary.minZoom;\n      // Get all the files to download\n      const boundaryTileUrls = [];\n      // Iterate through the min and max zoom to get the tiles which should be downloaded\n      for (let i = minZoom; i <= this.maxZoomLevel; i++) {\n        // Get the tiles at zoom level 20\n        const relevantTiles = tileSplits[i - minZoom].split('-');\n        const minX = parseInt(relevantTiles[0], 10);\n        const maxX = parseInt(relevantTiles[1], 10);\n        const minY = parseInt(relevantTiles[2], 10);\n        const maxY = parseInt(relevantTiles[3], 10);\n        // Iterate through the x and y to get all the tiles for the boundary\n        for (let x = minX; x <= maxX; x++) {\n          for (let y = minY; y <= maxY; y++) {\n            const urlExtension = [boundary.id, 'visible', i, x, y + '.png'].join('/');\n            boundaryTileUrls.push(urlExtension);\n          }\n        }\n      }\n      this.downloadTiles(boundaryTileUrls, boundary.id)\n    }\n  }\n\n  /** Function which actually downloads the offline tiles **/\n  downloadTiles(tileUrls, boundaryId) {\n    this.platform.ready().then(() => {\n      this.fileTransfer = this.transfer.create();\n      this.offlineTiles[boundaryId] = {loadedTiles: 0, totalTiles: tileUrls.length, error: false};\n      // Prepare the download tile promise\n      const downloadTile = (urlExtension) => () => new Promise((resolve, reject) => {\n        const url = urlExtension;\n        const downloadUrl = this.baseUrl + urlExtension;\n        // Make sure the file does not already exist\n        this.file.checkFile(this.file.dataDirectory, url).then(() => {\n          // Increment the loaded tiles variable\n          this.offlineTiles[boundaryId].loadedTiles += 1;\n          // Update the offline tiles local variable\n          this.storage.set('offline_tiles', this.offlineTiles);\n          // Resolve the promise\n          resolve();\n        }).catch(() => {\n            const filepath = this.file.dataDirectory + url;\n            this.fileTransfer.download(downloadUrl, filepath).then((entry) => {\n              console.log('Tile download success', downloadUrl);\n              // Add the url extension as a key with the fileUrl being the path in that key\n              this.offlineTiles[boundaryId][urlExtension] = entry.toURL();\n              // Update the storage that the offline tile has been downloaded\n              // Increment the loaded tiles variable\n              this.offlineTiles[boundaryId].loadedTiles += 1;\n              // Update the offline tiles local variable\n              this.storage.set('offline_tiles', this.offlineTiles);\n              // Resolve the promise\n              resolve();\n            }, (onRejectedError) => {\n              console.log('tile download error', onRejectedError);\n              reject();\n            }).catch((error) => {\n              console.log('download error', error)\n            });\n          }\n        );\n      });\n      this.sequence(tileUrls.map(downloadTile)).then(() => {\n        console.log('COMPLETE', this.offlineTiles[boundaryId]);\n      }).catch((error) => {\n        console.log('DOWNLOAD ERROR OCCURRED', error);\n        // Try again\n        // this.downloadTiles(tileUrls, clientId, boundaryId);\n        // Update that an error occurred allowing the user to try re-download\n        this.offlineTiles[boundaryId].error = true;\n      });\n    })\n  }\n\n  sequence(promises) {\n    return promises.reduce((previous, promise) => previous.then(promise), Promise.resolve());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/maps/maps.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the Tabs page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-tabs',\n  templateUrl: 'tabs.html',\n})\nexport class Tabs {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Tabs');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HttpModule } from '@angular/http';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { Tabs } from '../pages/tabs/tabs';\nimport { Maps } from '../pages/maps/maps';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { GoogleMaps } from '@ionic-native/google-maps';\nimport { Camera } from '@ionic-native/camera';\nimport { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer';\nimport { File } from '@ionic-native/file';\nimport { IonicImageViewerModule } from 'ionic-img-viewer';\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\nimport { Geolocation } from '@ionic-native/geolocation';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    Tabs,\n    Maps,\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot(),\n    IonicImageViewerModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    Tabs,\n    Maps,\n  ],\n  providers: [\n    GoogleMaps,\n    InAppBrowser,\n    Geolocation,\n    File, FileTransfer, FileTransferObject,\n    StatusBar,\n    Camera,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { Maps } from '../pages/maps/maps';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = Maps;\n\n  constructor(platform: Platform, statusBar: StatusBar) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\nimport {NavController, NavParams } from 'ionic-angular';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  private clientID: any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    this.clientID = navParams.get('clientID');\n    console.log(this.clientID);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts"],"sourceRoot":""}